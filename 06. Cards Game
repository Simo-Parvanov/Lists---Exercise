import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

public class test {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        List<Integer> firstPlayer = Arrays.stream(scanner.nextLine()
                .split(" "))
                .map(Integer::parseInt)
                .collect(Collectors.toList());
        List<Integer> secondPlayer = Arrays.stream(scanner.nextLine()
                .split(" "))
                .map(Integer::parseInt)
                .collect(Collectors.toList());
        int sizeFirst = firstPlayer.size();
        int sizeSecond = secondPlayer.size();

        while (sizeFirst != 0 && sizeSecond != 0) {
            checkForEquality(firstPlayer, secondPlayer);
            if (firstPlayer.get(0) > secondPlayer.get(0)) {
                action(secondPlayer, firstPlayer);
            } else if (firstPlayer.get(0) < secondPlayer.get(0)) {
                action(firstPlayer, secondPlayer);
            }
            sizeFirst = firstPlayer.size();
            sizeSecond = secondPlayer.size();
        }
        int maxSizeList = Math.max(sizeFirst, sizeSecond);
        if (firstPlayer.size() == maxSizeList) {
            int firstSum = 0;
            for (int i = 0; i < maxSizeList; i++) {
                firstSum += firstPlayer.get(i);
            }
            System.out.printf("First player wins! Sum: %d", firstSum);
        } else {
            int secondSum = 0;
            for (int i = 0; i < maxSizeList; i++) {
                secondSum += secondPlayer.get(i);
            }
            System.out.printf("Second player wins! Sum: %d", secondSum);
        }
    }

    private static void action(List<Integer> firstPlayer, List<Integer> secondPlayer) {
        int firstMap = firstPlayer.get(0);
        int secondMap = secondPlayer.get(0);
        secondPlayer.add(secondMap);
        secondPlayer.add(firstMap);
        firstPlayer.remove(0);
        secondPlayer.remove(0);
    }

    private static void checkForEquality(List<Integer> firstPlayer, List<Integer> secondPlayer) {
        if (firstPlayer.get(0).equals(secondPlayer.get(0))) {
            firstPlayer.remove(0);
            secondPlayer.remove(0);
        }
    }
}
